name: NDK build

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - "version-*"
  pull_request:
    branches-ignore:
      - "version-*"

env:
  module_id: flamingo
  cache-name: flamingo_cache
  qmodName: flamingo

jobs:
  test-local:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          submodules: true

      - uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Set up Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: latest
          platform: x64

      # Get QPM so we can bring in dependencies
      - name: QPM Rust Action
        uses: Fernthedev/qpm-action@v1
        with:
          #required
          workflow_token: ${{secrets.GITHUB_TOKEN}}

          restore: true # will run restore on download
          cache: true #will cache dependencies

      - name: QPM Collapse
        run: qpm-rust collapse

      - name: CMake with LOCAL_TEST enabled
        run: |
          CC=clang CXX=clang cmake -B build -DTEST_BUILD=1 -GNinja

      - name: Build
        run: |
          ninja -C build
 
      # Run the test to ensure validity
      - name: Run simple test
        run: ./build/fixup-test 2>&1 | tee ./build/test-output.txt

      # Upload test artifact
      - name: Upload test artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-output.txt
          path: ./build/test-output.txt
          if-no-files-found: error

      - name: Run API test
        run: ./build/api-test 2>&1 | tee ./build/api-test-output.txt

      # Upload test artifact
      - name: Upload test artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: api-test-output.txt
          path: ./build/api-test-output.txt
          if-no-files-found: error
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          submodules: true
          lfs: true

      - uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Create ndkpath.txt
        run: |
          echo "$ANDROID_NDK_LATEST_HOME" > ${GITHUB_WORKSPACE}/ndkpath.txt
          cat ${GITHUB_WORKSPACE}/ndkpath.txt

      - name: QPM Rust Action
        uses: Fernthedev/qpm-rust-action@main
        with:
          #required
          workflow_token: ${{secrets.GITHUB_TOKEN}}

          restore: true # will run restore on download
          cache: true #will cache dependencies

          # Name of qmod in release asset. Assumes exists, same as prior
          qpm_qmod: ${{env.qmodName}}.qmod

      - name: QPM Collapse
        run: qpm-rust collapse

      - name: Build
        run: |
          cd ${GITHUB_WORKSPACE}
          qpm-rust s build

      - name: Create Qmod
        run: |
          qpm-rust qmod build
          pwsh -Command ./createqmod.ps1 ${{env.qmodName}}

      - name: Get Library Name
        id: libname
        run: |
          cd ./build/
          pattern="lib${module_id}*.so"
          files=( $pattern )
          echo ::set-output name=NAME::"${files[0]}"

      - name: Upload non-debug artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.libname.outputs.NAME }}
          path: ./build/${{ steps.libname.outputs.NAME }}
          if-no-files-found: error

      - name: Upload debug artifact
        uses: actions/upload-artifact@v4
        with:
          name: debug_${{ steps.libname.outputs.NAME }}
          path: ./build/debug_${{ steps.libname.outputs.NAME }}
          if-no-files-found: error

      - name: Upload qmod artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.qmodName}}.qmod
          path: ./${{ env.qmodName }}.qmod
          if-no-files-found: error
